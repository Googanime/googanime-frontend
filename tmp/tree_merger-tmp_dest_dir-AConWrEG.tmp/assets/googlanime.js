eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"googlanime/adapters/anime\", \n  [\"ember-data\",\"ember\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var App = __dependency2__[\"default\"];\n    var config = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTAdapter.extend({\n      host: config.backend.host,\n      namespace: config.backend.namespace\n    });\n  });//# sourceURL=googlanime/adapters/anime.js");

;eval("define(\"googlanime/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=googlanime/app.js");

;eval("define(\"googlanime/components/em-checkbox\", \n  [\"ember\",\"ember-idx-forms/checkbox\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var CheckboxComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = CheckboxComponent;\n  });//# sourceURL=googlanime/components/em-checkbox.js");

;eval("define(\"googlanime/components/em-form-control-help\", \n  [\"ember\",\"ember-idx-forms/control_help\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var FormControlHelperComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = FormControlHelperComponent;\n  });//# sourceURL=googlanime/components/em-form-control-help.js");

;eval("define(\"googlanime/components/em-form-group\", \n  [\"ember\",\"ember-idx-forms/group\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var FormGroupComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = FormGroupComponent;\n  });//# sourceURL=googlanime/components/em-form-group.js");

;eval("define(\"googlanime/components/em-form-label\", \n  [\"ember\",\"ember-idx-forms/label\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var FormLabelComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = FormLabelComponent;\n  });//# sourceURL=googlanime/components/em-form-label.js");

;eval("define(\"googlanime/components/em-form-submit\", \n  [\"ember\",\"ember-idx-forms/submit_button\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SubmitButtonComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = SubmitButtonComponent;\n  });//# sourceURL=googlanime/components/em-form-submit.js");

;eval("define(\"googlanime/components/em-form\", \n  [\"ember\",\"ember-idx-forms/form\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var FormComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = FormComponent;\n  });//# sourceURL=googlanime/components/em-form.js");

;eval("define(\"googlanime/components/em-input\", \n  [\"ember\",\"ember-idx-forms/input\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var InputComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = InputComponent;\n  });//# sourceURL=googlanime/components/em-input.js");

;eval("define(\"googlanime/components/em-select\", \n  [\"ember\",\"ember-idx-forms/select\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SelectComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = SelectComponent;\n  });//# sourceURL=googlanime/components/em-select.js");

;eval("define(\"googlanime/components/em-text\", \n  [\"ember\",\"ember-idx-forms/text\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var TextComponent = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = TextComponent;\n  });//# sourceURL=googlanime/components/em-text.js");

;eval("define(\"googlanime/controllers/account\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      actions: {\n        invalidate: function invalidate() {\n          this.get(\'session\').invalidate();\n          console.debug(\"Session has been shut down\");\n        } }\n    });\n  });//# sourceURL=googlanime/controllers/account.js");

;eval("define(\"googlanime/controllers/account/signup\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      // injects the application controller in controllers.application\n      needs: [\'application\']\n    });\n  });//# sourceURL=googlanime/controllers/account/signup.js");

;eval("define(\"googlanime/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      appName: \'GooglAnime\'\n    });\n  });//# sourceURL=googlanime/controllers/application.js");

;eval("define(\"googlanime/controllers/login\", \n  [\"ember\",\"simple-auth/mixins/login-controller-mixin\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var LoginControllerMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend(LoginControllerMixin, {\n      authenticator: \'authenticator:torii\'\n    });\n  });//# sourceURL=googlanime/controllers/login.js");

;eval("define(\"googlanime/controllers/search\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n      // search parameters\n      queryParams: [\'query\', \'type\', \'fields\', \'render\'],\n      search: false,\n      query: null,\n      type: \'\',\n      fields: \'englishTitle\',\n      render: \'\',\n\n      // value of error filed\n      error: \'\',\n\n      // delay between each keyup on reseatch bar\n      timeout: 0,\n\n      layoutList: false,\n\n      animeSelected: null,\n\n      //checkbox type\n      isAnimeType: false,\n      watchIsAnimeType: (function (key, value) {\n\n        var types = this.get(\'type\').split(\',\');\n        var index = types.indexOf(\'anime\');\n\n        if (value) {\n          if (index > -1) {\n            types.removeObject(\'anime\');\n          } else {\n            types.addObject(\'anime\');\n          }\n        }\n\n        this.set(\'type\', types.join(\',\'));\n      }).observes(\'isAnimeType\'),\n\n      //checkbox type\n      isMangaType: false,\n      watchIsMangaType: (function (key, value) {\n\n        var types = this.get(\'type\').split(\',\');\n        var index = types.indexOf(\'manga\');\n\n        if (value) {\n          if (index > -1) {\n            types.removeObject(\'manga\');\n          } else {\n            types.addObject(\'manga\');\n          }\n        }\n\n        this.set(\'type\', types.join(\',\'));\n      }).observes(\'isMangaType\'),\n\n      //checkbox type\n      isMangakaType: false,\n      watchIsMangakaType: (function (key, value) {\n\n        var types = this.get(\'type\').split(\',\');\n        var index = types.indexOf(\'mangaka\');\n\n        if (value) {\n          if (index > -1) {\n            types.removeObject(\'mangaka\');\n          } else {\n            types.addObject(\'mangaka\');\n          }\n        }\n\n        this.set(\'type\', types.join(\',\'));\n      }).observes(\'isMangakaType\'),\n\n      //checkbox type\n      isCharacterType: false,\n      watchIsCharacterType: (function (key, value) {\n\n        var types = this.get(\'type\').split(\',\');\n        var index = types.indexOf(\'character\');\n\n        if (value) {\n          if (index > -1) {\n            types.removeObject(\'character\');\n          } else {\n            types.addObject(\'character\');\n          }\n        }\n\n        this.set(\'type\', types.join(\',\'));\n      }).observes(\'isCharacterType\'),\n\n      //checkbox type\n      isPodcastType: false,\n      watchIsPodcastType: (function (key, value) {\n\n        var types = this.get(\'type\').split(\',\');\n        var index = types.indexOf(\'podcast\');\n\n        if (value) {\n          if (index > -1) {\n            types.removeObject(\'podcast\');\n          } else {\n            types.addObject(\'podcast\');\n          }\n        }\n\n        this.set(\'type\', types.join(\',\'));\n      }).observes(\'isPodcastType\'),\n\n      actions: {\n        search: function search() {\n          this.set(\'query\', this.get(\'searchValue\'));\n          console.debug(\'changing search value\');\n          window.location.replace(\'/search?query=\' + this.get(\'searchValue\'));\n        },\n\n        updateSeriePanel: function updateSeriePanel(anime) {\n          this.set(\'animeSelected\', anime);\n        },\n\n        changeLayoutToList: (function () {\n          this.set(\'layoutList\', true);\n        }).observes(\'controller.layoutList\'),\n\n        changeLayoutToThumbnail: (function () {\n          this.set(\'layoutList\', false);\n        }).observes(\'controller.layoutList\')\n\n      }\n    });\n  });//# sourceURL=googlanime/controllers/search.js");

;eval("define(\"googlanime/helpers/query-param\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    __exports__.queryParam = queryParam;\n    var Ember = __dependency1__[\"default\"];\n\n    function queryParam(input, controller) {\n      return controller.get(input);\n    }\n\n    ;\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(queryParam);\n  });//# sourceURL=googlanime/helpers/query-param.js");

;eval("define(\"googlanime/initializers/application\", \n  [\"ember\",\"simple-auth-torii/authenticators/torii\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var AuthenticatorTorii = __dependency2__[\"default\"];\n\n    var initialize = function initialize() {\n      AuthenticatorTorii.reopen({\n        // session data has changed or app that already had persisted session was opened\n        restore: function restore(data) {\n          // doing nothing, cause none of torii providers return anything when session is\n          // invalidated and it clears the session\n          var resolveData = data || {};\n          this.provider = resolveData.provider;\n          return new Ember.RSVP.Promise(function (resolve) {\n            resolve(resolveData);\n          });\n        }\n      });\n    };\n\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'reopen-authenticator-torii\',\n      before: \'simple-auth-torii\',\n      initialize: initialize\n    };\n  });//# sourceURL=googlanime/initializers/application.js");

;eval("define(\"googlanime/initializers/export-application-global\", \n  [\"ember\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    __exports__.initialize = initialize;\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize() {\n      var application = arguments[1] || arguments[0];\n      if (config.exportApplicationGlobal !== false) {\n        var value = config.exportApplicationGlobal;\n        var globalName;\n\n        if (typeof value === \'string\') {\n          globalName = value;\n        } else {\n          globalName = Ember.String.classify(config.modulePrefix);\n        }\n\n        if (!window[globalName]) {\n          window[globalName] = application;\n\n          application.reopen({\n            willDestroy: function willDestroy() {\n              this._super.apply(this, arguments);\n              delete window[globalName];\n            }\n          });\n        }\n      }\n    }\n\n    ;\n\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=googlanime/initializers/export-application-global.js");

;eval("define(\"googlanime/initializers/initialize-torii-callback\", \n  [\"torii/redirect-handler\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var RedirectHandler = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'torii-callback\',\n      before: \'torii\',\n      initialize: function initialize(container, app) {\n        app.deferReadiness();\n        RedirectHandler.handle(window.location.toString())[\"catch\"](function () {\n          app.advanceReadiness();\n        });\n      }\n    };\n  });//# sourceURL=googlanime/initializers/initialize-torii-callback.js");

;eval("define(\"googlanime/initializers/initialize-torii-session\", \n  [\"torii/configuration\",\"torii/bootstrap/session\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var configuration = __dependency1__[\"default\"];\n    var bootstrapSession = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'torii-session\',\n      after: \'torii\',\n\n      initialize: function initialize(container) {\n        if (configuration.sessionServiceName) {\n          bootstrapSession(container, configuration.sessionServiceName);\n          container.injection(\'adapter\', configuration.sessionServiceName, \'torii:session\');\n        }\n      }\n    };\n  });//# sourceURL=googlanime/initializers/initialize-torii-session.js");

;eval("define(\"googlanime/initializers/initialize-torii\", \n  [\"torii/bootstrap/torii\",\"torii/configuration\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var bootstrapTorii = __dependency1__[\"default\"];\n    var configuration = __dependency2__[\"default\"];\n\n    var initializer = {\n      name: \'torii\',\n      initialize: function initialize(container, app) {\n        bootstrapTorii(container);\n\n        // Walk all configured providers and eagerly instantiate\n        // them. This gives providers with initialization side effects\n        // like facebook-connect a chance to load up assets.\n        for (var key in configuration.providers) {\n          if (configuration.providers.hasOwnProperty(key)) {\n            container.lookup(\'torii-provider:\' + key);\n          }\n        }\n\n        app.inject(\'route\', \'torii\', \'torii:main\');\n      }\n    };\n\n    if (window.DS) {\n      initializer.after = \'store\';\n    }\n\n    __exports__[\"default\"] = initializer;\n  });//# sourceURL=googlanime/initializers/initialize-torii.js");

;eval("define(\"googlanime/initializers/simple-auth-torii\", \n  [\"simple-auth-torii/initializer\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var initializer = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = initializer;\n  });//# sourceURL=googlanime/initializers/simple-auth-torii.js");

;eval("define(\"googlanime/initializers/simple-auth\", \n  [\"simple-auth/configuration\",\"simple-auth/setup\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Configuration = __dependency1__[\"default\"];\n    var setup = __dependency2__[\"default\"];\n    var ENV = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'simple-auth\',\n      initialize: function initialize(container, application) {\n        Configuration.load(container, ENV[\'simple-auth\'] || {});\n        setup(container, application);\n      }\n    };\n  });//# sourceURL=googlanime/initializers/simple-auth.js");

;eval("define(\"googlanime/models/account\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/account.js");

;eval("define(\"googlanime/models/account/signin\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/account/signin.js");

;eval("define(\"googlanime/models/account/signup\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/account/signup.js");

;eval("define(\"googlanime/models/anime\", \n  [\"ember-data\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var App = __dependency2__[\"default\"];\n\n    var Anime = DS.Model.extend({\n      slug: DS.attr(\'string\'),\n      canonicalTitle: DS.attr(\'string\'),\n      englishTitle: DS.attr(\'string\'),\n      romajiTitle: DS.attr(\'string\'),\n      japaneseTitle: DS.attr(\'string\'),\n      synopsis: DS.attr(\'string\'),\n      startedAiringDate: DS.attr(\'string\'),\n      finishedAiringDate: DS.attr(\'string\'),\n      youtubeVideoId: DS.attr(\'string\'),\n      ageRating: DS.attr(\'string\'),\n      episodeCount: DS.attr(\'string\'),\n      episodeLength: DS.attr(\'string\'),\n      showType: DS.attr(\'string\'),\n      posterImage: DS.attr(\'string\'),\n      coverImage: DS.attr(\'string\'),\n      communityRating: DS.attr(\'string\'),\n      genres: DS.hasMany(\'genre\'),\n      links: DS.attr(\'string\')\n    });\n\n    __exports__[\"default\"] = Anime;\n  });//# sourceURL=googlanime/models/anime.js");

;eval("define(\"googlanime/models/genre\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/genre.js");

;eval("define(\"googlanime/models/link\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/link.js");

;eval("define(\"googlanime/models/manga\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/manga.js");

;eval("define(\"googlanime/models/search\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({});\n  });//# sourceURL=googlanime/models/search.js");

;eval("define(\"googlanime/models/title\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      name: DS.attr(\'string\'),\n      type: DS.attr(\'string\'),\n      anime: DS.belongsTo(\'anime\')\n    });\n  });//# sourceURL=googlanime/models/title.js");

;eval("define(\"googlanime/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      name: DS.attr(\'string\'),\n      token: DS.attr(\'string\')\n    });\n  });//# sourceURL=googlanime/models/user.js");

;eval("define(\"googlanime/router\", \n  [\"ember\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function () {\n      this.resource(\'clients\', function () {});\n      this.resource(\'manga\', function () {});\n      this.resource(\'anime\', function () {});\n      this.resource(\'character\', function () {});\n      this.resource(\'author\', function () {});\n      this.resource(\'users\', function () {});\n      this.resource(\'animes\', function () {});\n      this.resource(\'signup\', function () {});\n      this.resource(\'profile\', function () {});\n      this.resource(\'logout\', function () {});\n      this.resource(\'account\', function () {\n        this.route(\'signin\');\n        this.route(\'login\');\n        this.route(\'logout\');\n        this.route(\'signup\');\n      });\n\n      this.resource(\'protected\', function () {\n        this.route(\'page\', function () {});\n      });\n      this.resource(\'search\', { queryParams: [\'q\'] }, function () {});\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=googlanime/router.js");

;eval("define(\"googlanime/routes/account\", \n  [\"ember\",\"simple-auth/mixins/application-route-mixin\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ApplicationRouteMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(ApplicationRouteMixin, {\n      actions: {\n        signUpWithGoogle: function signUpWithGoogle() {\n          var session = this.get(\'session\');\n          var controller = this.controllerFor(\'account\');\n          session.authenticate(\'simple-auth-authenticator:torii\', \'google-token\').then(function (data) {});\n          return;\n        }\n      }\n    });\n  });//# sourceURL=googlanime/routes/account.js");

;eval("define(\"googlanime/routes/account/signin\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({});\n  });//# sourceURL=googlanime/routes/account/signin.js");

;eval("define(\"googlanime/routes/account/signup\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({});\n  });//# sourceURL=googlanime/routes/account/signup.js");

;eval("define(\"googlanime/routes/animes\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function model() {\n        return this.store.findAll(\'anime\');\n      },\n\n      actions: {\n        changeAnimeLayoutToList: (function () {\n          this.controllerFor(\"animes\").set(\'layoutAnimeList\', true);\n        }).observes(\'controller.layoutAnimeList\'),\n\n        changeAnimeLayoutToThumbnail: (function () {\n          this.controllerFor(\"animes\").set(\'layoutAnimeList\', false);\n        }).observes(\'controller.layoutAnimeList\')\n      }\n\n    });\n  });//# sourceURL=googlanime/routes/animes.js");

;eval("define(\"googlanime/routes/application\", \n  [\"ember\",\"simple-auth/mixins/application-route-mixin\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ApplicationRouteMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(ApplicationRouteMixin, {\n\n      beforeModel: function beforeModel() {\n        this.transitionTo(\'search\');\n      },\n\n      actions: {\n        //call the account invalidateSession\n        invalidateSession: function invalidateSession() {\n          this.controllerFor(\'account\').send(\'invalidate\');\n        },\n\n        showData: function showData() {\n          alert(authData);\n        }\n      }\n    });\n  });//# sourceURL=googlanime/routes/application.js");

;eval("define(\"googlanime/routes/search\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      queryParams: {\n        category: {\n          refreshModel: true\n        }\n      },\n\n      model: function model(params) {\n\n        if (!params.query) {\n          return;\n        }\n\n        var controller = this.controllerFor(\"search\");\n\n        controller.set(\"search\", true);\n\n        controller.set(\"query\", params.query);\n\n        var types = params.type.split(\',\');\n\n        if (types.indexOf(\"anime\") > -1) {\n          controller.set(\"isAnimeType\", true);\n        }\n        if (types.indexOf(\"manga\") > -1) {\n          controller.set(\"isMangaType\", true);\n        }\n\n        if (types.indexOf(\"character\") > -1) {\n          controller.set(\"isCharacterType\", true);\n        }\n\n        if (types.indexOf(\"podcast\") > -1) {\n          controller.set(\"isPodcastType\", true);\n        }\n\n        if (types.indexOf(\"mangaka\") > -1) {\n          controller.set(\"isMangakaType\", true);\n        }\n\n        controller.set(\"type\", params.type);\n\n        controller.set(\"fields\", params.fields);\n\n        controller.set(\"render\", params.render);\n\n        return this.store.find(\'anime\', {\n          query: params.query,\n          type: params.type,\n          fields: params.fields,\n          render: params.render\n        }).then(function (animes) {\n\n          if (animes.get(\"firstObject\")) {\n            controller.set(\"animeSelected\", animes.get(\"firstObject\"));\n            controller.set(\"error\", null);\n          } else {\n            controller.set(\"error\", \"We were not able to find any entries with the criterias you provided.\");\n          }\n\n          return animes;\n        }, function () {\n          controller.set(\"error\", \"The server seems to be down... Please try once more or come back later.\");\n          return animes;\n        });\n      },\n\n      actions: {\n        callBackend: function callBackend(valueQuery) {\n\n          var timeout = this.controllerFor(\"search\").get(\"timeout\");\n          var callback = this;\n\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n\n          timeout = setTimeout(function () {\n            if (valueQuery !== \"\") {\n              callback.refresh();\n            }\n          }, 800);\n\n          this.controllerFor(\"search\").set(\"timeout\", timeout);\n        }\n      }\n    });\n  });//# sourceURL=googlanime/routes/search.js");

;eval("define(\"googlanime/serializers/anime\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTSerializer.extend(DS.EmbeddedRecordsMixin, {\n      attrs: {\n        //titles: {embedded: \'always\'}\n      }\n    });\n  });//# sourceURL=googlanime/serializers/anime.js");

;eval("define(\"googlanime/serializers/animes\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTSerializer.extend({});\n  });//# sourceURL=googlanime/serializers/animes.js");

;eval("define(\"googlanime/services/validations\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var set = Ember.set;\n\n    __exports__[\"default\"] = Ember.Service.extend({\n      init: function init() {\n        set(this, \'cache\', {});\n      }\n    });\n  });//# sourceURL=googlanime/services/validations.js");

;eval("define(\"googlanime/templates/account/signin\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Hello \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"! Your email is \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          content(env, morph0, context, \"session.content.user\");\n          content(env, morph1, context, \"session.content.userEmail\");\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/account/signin.js");

;eval("define(\"googlanime/templates/account/signup\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"container\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"row\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-xs-12\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"center\");\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<img src=\\\"https://d39bd7m80qu33d.cloudfront.net/1.73.6/img/docker-logo-small.png\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"h1\");\n          var el6 = dom.createTextNode(\"Join \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\" and be part of the community\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"hr\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-xs-12 col-md-6\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"article\");\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"h2\");\n          var el6 = dom.createTextNode(\"Manga and anime history\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"p\");\n          var el6 = dom.createTextNode(\"Browse, host, share and manage your manga and anime.\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"article\");\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"h2\");\n          var el6 = dom.createTextNode(\"Share your profile\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"p\");\n          var el6 = dom.createTextNode(\"Integrate and share your profile with your friends.\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"article\");\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"h2\");\n          var el6 = dom.createTextNode(\"Get the latest news\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"p\");\n          var el6 = dom.createTextNode(\"Subscribes to the \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\" and get the latest updates\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"col-xs-6 col-md-6\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"br\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"form\");\n          dom.setAttribute(el4,\"method\",\"post\");\n          dom.setAttribute(el4,\"id\",\"form-login\");\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<div class=\\\"form-group\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<input id=\\\"id_username\\\"  class=\\\"form-control\\\" maxlength=\\\"30\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"</div>\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<div class=\\\"form-group\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<input id=\\\"id_password1\\\" class=\\\"form-control\\\" name=\\\"password1\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"</div>\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<div class=\\\"form-group\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<input id=\\\"id_email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\" type=\\\"text\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"</div>\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<div class=\\\"form-group\\\">\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Sign up</button>\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"<label class=\\\"light right\\\"><input checked=\\\"checked\\\" id=\\\"id_subscribe\\\" name=\\\"subscribe\\\" type=\\\"checkbox\\\"> &nbsp; Yes! I want the weekly newsletter!</label>\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"</div>\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n\\n              \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"a\");\n          dom.setAttribute(el5,\"class\",\"btn btn-block btn-social btn-facebook\");\n          var el6 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"i\");\n          dom.setAttribute(el6,\"class\",\"fa fa-facebook\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\" Sign in with Facebook\\n              \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"a\");\n          dom.setAttribute(el5,\"class\",\"btn btn-block btn-social btn-github\");\n          var el6 = dom.createTextNode(\"\\n                      \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"i\");\n          dom.setAttribute(el6,\"class\",\"fa fa-github\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\" Sign in with GitHub\\n                  \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"a\");\n          dom.setAttribute(el5,\"class\",\"btn btn-block btn-social btn-google-plus\");\n          var el6 = dom.createTextNode(\"\\n                      \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"i\");\n          dom.setAttribute(el6,\"class\",\"fa fa-google-plus\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\" Sign in with Google\\n                  \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0, 1]);\n          var element1 = dom.childAt(element0, [5, 3]);\n          var element2 = dom.childAt(element1, [27]);\n          var element3 = dom.childAt(element1, [29]);\n          var element4 = dom.childAt(element1, [31]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 1, 3]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3, 5, 3]),1,1);\n          content(env, morph0, context, \"controllers.application.appName\");\n          content(env, morph1, context, \"controllers.application.appName\");\n          element(env, element2, context, \"action\", [\"signUpWithFacebook\"], {});\n          element(env, element3, context, \"action\", [\"signUpWithGithub\"], {});\n          element(env, element4, context, \"action\", [\"signUpWithGoogle\"], {});\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/account/signup.js");

;eval("define(\"googlanime/templates/animes\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"fieldset\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n\\n          \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element3 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element3,1,1);\n            var morph1 = dom.createMorphAt(element3,3,3);\n            var morph2 = dom.createMorphAt(element3,5,5);\n            inline(env, morph0, context, \"em-select\", [], {\"label\": \"Type\", \"property\": \"gender\", \"content\": get(env, context, \"genderOptions\"), \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.name\", \"prompt\": \"--select--\"});\n            inline(env, morph1, context, \"em-select\", [], {\"label\": \"Score\", \"property\": \"gender\", \"content\": get(env, context, \"genderOptions\"), \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.name\", \"prompt\": \"--select--\"});\n            inline(env, morph2, context, \"em-select\", [], {\"label\": \"Status\", \"property\": \"gender\", \"content\": get(env, context, \"genderOptions\"), \"optionValuePath\": \"content.id\", \"optionLabelPath\": \"content.name\", \"prompt\": \"--select--\"});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"row\");\n              var el2 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"a\");\n              dom.setAttribute(el2,\"href\",\"#\");\n              dom.setAttribute(el2,\"class\",\"thumbnail\");\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"img\");\n              dom.setAttribute(el3,\"alt\",\"125x125\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element1 = dom.childAt(fragment, [3, 1]);\n              var element2 = dom.childAt(element1, [3]);\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              var morph1 = dom.createMorphAt(element1,1,1);\n              var attrMorph0 = dom.createAttrMorph(element2, \'src\');\n              content(env, morph0, context, \"model.titles.canonical\");\n              content(env, morph1, context, \"debugger\");\n              attribute(env, attrMorph0, element2, \"src\", concat(env, [get(env, context, \"anime.poster_image\")]));\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"anime\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"col-xs-2\");\n              var el2 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"a\");\n              dom.setAttribute(el2,\"href\",\"#\");\n              dom.setAttribute(el2,\"class\",\"thumbnail\");\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"img\");\n              dom.setAttribute(el3,\"alt\",\"125x125\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element0 = dom.childAt(fragment, [3, 1, 1]);\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              var attrMorph0 = dom.createAttrMorph(element0, \'src\');\n              content(env, morph0, context, \"model.titles.canonical\");\n              attribute(env, attrMorph0, element0, \"src\", concat(env, [get(env, context, \"anime.poster_image\")]));\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"anime\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          dom.setAttribute(el1,\"style\",\"margin-top:-10px;vertical-align: middle;\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"pull-left\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"h4\");\n          var el4 = dom.createTextNode(\"Animes\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"pull-right\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3,\"href\",\"#Foo\");\n          dom.setAttribute(el3,\"class\",\"btn btn-default btn btn-filter\");\n          dom.setAttribute(el3,\"data-toggle\",\"collapse\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"glyphicon glyphicon-filter\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"pull-right\");\n          dom.setAttribute(el2,\"style\",\"margin-left:0px;\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3,\"type\",\"button\");\n          dom.setAttribute(el3,\"class\",\"btn btn-default\");\n          dom.setAttribute(el3,\"aria-label\",\"Left Align\");\n          dom.setAttribute(el3,\"style\",\"\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"glyphicon glyphicon-th\");\n          dom.setAttribute(el4,\"aria-hidden\",\"true\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"pull-right\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3,\"type\",\"button\");\n          dom.setAttribute(el3,\"class\",\"btn btn-default\");\n          dom.setAttribute(el3,\"aria-label\",\"Left Align\");\n          dom.setAttribute(el3,\"style\",\"\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"glyphicon glyphicon-th-list\");\n          dom.setAttribute(el4,\"aria-hidden\",\"true\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          dom.setAttribute(el1,\"style\",\"margin-top:-10px;\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"hr\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"id\",\"Foo\");\n          dom.setAttribute(el2,\"class\",\"collapse\");\n          dom.setAttribute(el2,\"style\",\"Text-size:smallest;\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"hr\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"id\",\"layoutAnimeList\");\n          dom.setAttribute(el2,\"class\",\"col-md-12\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element4 = dom.childAt(fragment, [0]);\n          var element5 = dom.childAt(element4, [5, 1]);\n          var element6 = dom.childAt(element4, [7, 1]);\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(fragment, [6, 1]),1,1);\n          element(env, element5, context, \"action\", [\"changeAnimeLayoutToThumbnail\"], {});\n          element(env, element6, context, \"action\", [\"changeAnimeLayoutToList\"], {});\n          block(env, morph0, context, \"em-form\", [], {\"form_layout\": \"default\", \"model\": get(env, context, \"someModel\"), \"action\": \"some-action\"}, child0, null);\n          block(env, morph1, context, \"if\", [get(env, context, \"layoutAnimeList\")], {}, child1, child2);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/animes.js");

;eval("define(\"googlanime/templates/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2,\"href\",\"#\");\n            dom.setAttribute(el2,\"style\",\"font-size: x-large\");\n            var el3 = dom.createElement(\"span\");\n            dom.setAttribute(el3,\"class\",\"glyphicons glyphicon-envelope\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2,\"href\",\"#\");\n            dom.setAttribute(el2,\"style\",\"font-size: small;margin-top: 2px;\");\n            var el3 = dom.createElement(\"span\");\n            dom.setAttribute(el3,\"class\",\"glyphicon glyphicon-bell\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.setAttribute(el1,\"class\",\"dropdown\");\n            var el2 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2,\"href\",\"#\");\n            dom.setAttribute(el2,\"class\",\"dropdown-toggle\");\n            dom.setAttribute(el2,\"data-toggle\",\"dropdown\");\n            dom.setAttribute(el2,\"role\",\"button\");\n            dom.setAttribute(el2,\"aria-expanded\",\"false\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"span\");\n            dom.setAttribute(el3,\"class\",\"caret\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"ul\");\n            dom.setAttribute(el2,\"class\",\"dropdown-menu\");\n            dom.setAttribute(el2,\"role\",\"menu\");\n            var el3 = dom.createTextNode(\"\\n                      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createElement(\"a\");\n            dom.setAttribute(el4,\"href\",\"#\");\n            var el5 = dom.createTextNode(\"Profil\");\n            dom.appendChild(el4, el5);\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createElement(\"a\");\n            dom.setAttribute(el4,\"href\",\"#\");\n            var el5 = dom.createTextNode(\"Preferences\");\n            dom.appendChild(el4, el5);\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            dom.setAttribute(el3,\"class\",\"divider\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"li\");\n            var el4 = dom.createElement(\"a\");\n            dom.setAttribute(el4,\"href\",\"#\");\n            var el5 = dom.createTextNode(\"Logout\");\n            dom.appendChild(el4, el5);\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [5]);\n            var element1 = dom.childAt(element0, [3, 7, 0]);\n            var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n            content(env, morph0, context, \"session.content.userName\");\n            element(env, element1, context, \"action\", [\"invalidateSession\"], {});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"Sign in\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"Sign up\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n            block(env, morph0, context, \"link-to\", [\"account.login\"], {}, child0, null);\n            block(env, morph1, context, \"link-to\", [\"account.signup\"], {}, child1, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"nav\");\n          dom.setAttribute(el1,\"class\",\"navbar navbar-default navbar-fixed-top divide-nav\");\n          dom.setAttribute(el1,\"role\",\"navigation\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"container-fluid\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"ul\");\n          dom.setAttribute(el3,\"class\",\"nav navbar-nav navbar-left\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"li\");\n          var el5 = dom.createElement(\"a\");\n          dom.setAttribute(el5,\"href\",\"/\");\n          var el6 = dom.createElement(\"i\");\n          dom.setAttribute(el6,\"class\",\"glyphicon glyphicon-home icon-white\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"ul\");\n          dom.setAttribute(el3,\"class\",\"nav navbar-nav navbar-right\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\" login check \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"footer\");\n          dom.setAttribute(el1,\"class\",\"footer navbar-fixed-bottom\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"container-fluid\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          dom.setAttribute(el3,\"class\",\"text-muted\");\n          var el4 = dom.createTextNode(\"GooglAnime\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 3]),3,3);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          block(env, morph0, context, \"if\", [get(env, context, \"session.isAuthenticated\")], {}, child0, child1);\n          content(env, morph1, context, \"outlet\");\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/application.js");

;eval("define(\"googlanime/templates/components/em-form-control-help\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          content(env, morph0, context, \"helpText\");\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/em-form-control-help.js");

;eval("define(\"googlanime/templates/components/em-form-group\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"wrapperClass\")});\n            inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group\"], {});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"wrapperClass\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/em-form-group.js");

;eval("define(\"googlanime/templates/components/em-form-label\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          content(env, morph0, context, \"yield\");\n          content(env, morph1, context, \"text\");\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/em-form-label.js");

;eval("define(\"googlanime/templates/components/em-form-submit\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"button\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element1 = dom.childAt(fragment, [1]);\n            var element2 = dom.childAt(element1, [1]);\n            var morph0 = dom.createMorphAt(element2,0,0);\n            element(env, element1, context, \"bind-attr\", [], {\"class\": get(env, context, \"horiClass\")});\n            element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"classes\")});\n            element(env, element2, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disabled\")});\n            content(env, morph0, context, \"text\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,0,0);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"classes\")});\n            element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disabled\")});\n            content(env, morph0, context, \"text\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"form.isHorizontal\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/em-form-submit.js");

;eval("define(\"googlanime/templates/components/em-form\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"em-form-submit\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          content(env, morph0, context, \"yield\");\n          block(env, morph1, context, \"if\", [get(env, context, \"submit_button\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/em-form.js");

;eval("define(\"googlanime/templates/components/formgroup/control-within-label\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"horiClass\": \"\", \"inlineClass\": \"\", \"viewName\": get(env, context, \"labelViewName\")}, child0, null);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/formgroup/control-within-label.js");

;eval("define(\"googlanime/templates/components/formgroup/form-group-control\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"controlWrapper\")});\n            inline(env, morph0, context, \"view\", [get(env, context, \"controlView\")], {\"viewName\": get(env, context, \"controlViewName\"), \"property\": get(env, context, \"propertyName\"), \"id\": get(env, context, \"cid\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [get(env, context, \"controlView\")], {\"viewName\": get(env, context, \"controlViewName\"), \"property\": get(env, context, \"propertyName\"), \"id\": get(env, context, \"cid\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"controlWrapper\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/formgroup/form-group-control.js");

;eval("define(\"googlanime/templates/components/formgroup/form-group\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            var child0 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"div\");\n                  var el2 = dom.createTextNode(\"\\n                    \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createComment(\"\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                \");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var element2 = dom.childAt(fragment, [1]);\n                  var morph0 = dom.createMorphAt(element2,1,1);\n                  element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"labelWrapperClass\")});\n                  inline(env, morph0, context, \"partial\", [\"components/formgroup/control-within-label\"], {});\n                  return fragment;\n                }\n              };\n            }());\n            var child1 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createComment(\"\");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, inline = hooks.inline;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                  inline(env, morph0, context, \"partial\", [\"components/formgroup/control-within-label\"], {});\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n                dom.insertBoundary(fragment, null);\n                dom.insertBoundary(fragment, 0);\n                block(env, morph0, context, \"if\", [get(env, context, \"labelWrapperClass\")], {}, child0, child1);\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            var child0 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"div\");\n                  var el2 = dom.createTextNode(\"\\n                    \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createComment(\"\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                    \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createComment(\"\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                \");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var element1 = dom.childAt(fragment, [1]);\n                  var morph0 = dom.createMorphAt(element1,1,1);\n                  var morph1 = dom.createMorphAt(element1,3,3);\n                  element(env, element1, context, \"bind-attr\", [], {\"class\": get(env, context, \"labelWrapperClass\")});\n                  inline(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"viewName\": get(env, context, \"labelViewName\")});\n                  inline(env, morph1, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n                  return fragment;\n                }\n              };\n            }());\n            var child1 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createComment(\"\");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createComment(\"\");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                  var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n                  inline(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"viewName\": get(env, context, \"labelViewName\")});\n                  inline(env, morph1, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n                dom.insertBoundary(fragment, null);\n                dom.insertBoundary(fragment, 0);\n                block(env, morph0, context, \"if\", [get(env, context, \"labelWrapperClass\")], {}, child0, child1);\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"yieldInLabel\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n              return fragment;\n            }\n          };\n        }());\n        var child2 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"form-control-feedback\");\n              var el2 = dom.createElement(\"i\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, element = hooks.element;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element0 = dom.childAt(fragment, [1, 0]);\n              element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"v_icon\")});\n              return fragment;\n            }\n          };\n        }());\n        var child3 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"            \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                inline(env, morph0, context, \"em-form-control-help\", [], {\"text\": get(env, context, \"help\"), \"viewName\": get(env, context, \"helpViewName\")});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"canShowErrors\")], {}, child0, null);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n            var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"label\")], {}, child0, child1);\n            block(env, morph1, context, \"if\", [get(env, context, \"v_icons\")], {}, child2, null);\n            block(env, morph2, context, \"unless\", [get(env, context, \"form.isInline\")], {}, child3, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"yield\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"unless\", [get(env, context, \"template\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/components/formgroup/form-group.js");

;eval("define(\"googlanime/templates/partials/anime_note\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"id\",\"series-panel\");\n          dom.setAttribute(el1,\"class\",\"col-md-2\");\n          dom.setAttribute(el1,\"style\",\"padding-right: 30px;\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"row\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"img\");\n          dom.setAttribute(el3,\"id\",\"serie-poster\");\n          dom.setAttribute(el3,\"style\",\"background-size:cover;height: 100%;width: 100%;max-height: 400px;max-width: 100%\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"row\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"id\",\"serie-info\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"h4\");\n          dom.setAttribute(el4,\"style\",\"text-align: left;padding-bottom:5px;border-bottom: 1px solid black\");\n          var el5 = dom.createTextNode(\"\\n                Titles\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"id\",\"serie-titles\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-title-romaji-left\");\n          var el6 = dom.createTextNode(\"Romaji: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-title-japanese-left\");\n          var el6 = dom.createTextNode(\"Japanese: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"h4\");\n          dom.setAttribute(el4,\"id\",\"serie-information\");\n          dom.setAttribute(el4,\"style\",\"text-align: left;padding-bottom:5px;border-bottom: 1px solid black\");\n          var el5 = dom.createTextNode(\"\\n                Information\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"id\",\"serie-metadata\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-started-airing-date-left\");\n          var el6 = dom.createTextNode(\"Aired: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-finished-airing-date-left\");\n          var el6 = dom.createTextNode(\"To: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-youtube-video-id-left\");\n          var el6 = dom.createTextNode(\"Trailer: http://youtube.com/\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-age-rating-left\");\n          var el6 = dom.createTextNode(\"Rating: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-episode-count-left\");\n          var el6 = dom.createTextNode(\"Episodes: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-episode-length-left\");\n          var el6 = dom.createTextNode(\"Duration: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"id\",\"serie-show-type-left\");\n          var el6 = dom.createTextNode(\"Type: \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var element1 = dom.childAt(element0, [1, 1]);\n          var element2 = dom.childAt(element0, [3, 1]);\n          var element3 = dom.childAt(element2, [3]);\n          var element4 = dom.childAt(element2, [7]);\n          var attrMorph0 = dom.createAttrMorph(element1, \'src\');\n          var morph0 = dom.createMorphAt(dom.childAt(element3, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element3, [3]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element4, [1]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element4, [3]),1,1);\n          var morph4 = dom.createMorphAt(dom.childAt(element4, [5]),1,1);\n          var morph5 = dom.createMorphAt(dom.childAt(element4, [7]),1,1);\n          var morph6 = dom.createMorphAt(dom.childAt(element4, [9]),1,1);\n          var morph7 = dom.createMorphAt(dom.childAt(element4, [11]),1,1);\n          var morph8 = dom.createMorphAt(dom.childAt(element4, [13]),1,1);\n          attribute(env, attrMorph0, element1, \"src\", concat(env, [get(env, context, \"animeSelected.posterImage\")]));\n          content(env, morph0, context, \"animeSelected.romajiTitle\");\n          content(env, morph1, context, \"animeSelected.japaneseTitle\");\n          content(env, morph2, context, \"animeSelected.startedAiringDate\");\n          content(env, morph3, context, \"animeSelected.finishedAiringDate\");\n          content(env, morph4, context, \"animeSelected.youtubeVideoId\");\n          content(env, morph5, context, \"animeSelected.ageRating\");\n          content(env, morph6, context, \"animeSelected.episodeCount\");\n          content(env, morph7, context, \"animeSelected.episodeLength\");\n          content(env, morph8, context, \"animeSelected.showType\");\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/partials/anime_note.js");

;eval("define(\"googlanime/templates/partials/filter\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          dom.setAttribute(el1,\"style\",\"padding-top: 20px;\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"<div class=\\\"collapse\\\" id=\\\"collapseAdvancedFilter\\\">\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"\");\n          dom.setAttribute(el2,\"id\",\"collapseAdvancedFilter\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"well row col-sm-12\");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-xs-2\");\n          dom.setAttribute(el4,\"style\",\"border-right: 1px solid lightgrey;border-left: 1px solid lightgrey;\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"form\");\n          dom.setAttribute(el5,\"class\",\"form-horizontal\");\n          dom.setAttribute(el5,\"role\",\"form\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group input-group-xs\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"label\");\n          dom.setAttribute(el7,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el7,\"for\",\"Type\");\n          var el8 = dom.createTextNode(\"Type\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-xs-12\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"select\");\n          dom.setAttribute(el8,\"id\",\"Type\");\n          dom.setAttribute(el8,\"name\",\"Type\");\n          dom.setAttribute(el8,\"class\",\"form-control\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"TV\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Movie\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"OVA\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Special\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Music\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group input-group-xs\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"label\");\n          dom.setAttribute(el7,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el7,\"for\",\"Score\");\n          var el8 = dom.createTextNode(\"Score\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-xs-12\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"select\");\n          dom.setAttribute(el8,\"id\",\"Score\");\n          dom.setAttribute(el8,\"name\",\"Score\");\n          dom.setAttribute(el8,\"class\",\"form-control\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"1\");\n          var el10 = dom.createTextNode(\"0\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"2\");\n          var el10 = dom.createTextNode(\"1\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"2\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"3\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"4\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"5\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"6\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"7\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"8\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"9\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"10\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group input-group-xs\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"label\");\n          dom.setAttribute(el7,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el7,\"for\",\"Status\");\n          var el8 = dom.createTextNode(\"Status\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-xs-12\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"select\");\n          dom.setAttribute(el8,\"id\",\"Status\");\n          dom.setAttribute(el8,\"name\",\"Status\");\n          dom.setAttribute(el8,\"class\",\"form-control\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Finished\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Airing\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Not yet aired\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group input-group-xs\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"label\");\n          dom.setAttribute(el7,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el7,\"for\",\"Producer\");\n          var el8 = dom.createTextNode(\"Producer\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-xs-12\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"select\");\n          dom.setAttribute(el8,\"id\",\"Producer\");\n          dom.setAttribute(el8,\"name\",\"Producer\");\n          dom.setAttribute(el8,\"class\",\"form-control\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"Producer 1\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group input-group-xs\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"label\");\n          dom.setAttribute(el7,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el7,\"for\",\"Rated\");\n          var el8 = dom.createTextNode(\"rated\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-xs-12\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"select\");\n          dom.setAttribute(el8,\"id\",\"Rated\");\n          dom.setAttribute(el8,\"name\",\"Rated\");\n          dom.setAttribute(el8,\"class\",\"form-control\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"option\");\n          dom.setAttribute(el9,\"value\",\"\");\n          var el10 = dom.createTextNode(\"PG 13\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-sm-6\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"row\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"label\");\n          dom.setAttribute(el6,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el6,\"for\",\"Score\");\n          dom.setAttribute(el6,\"style\",\"padding-top: 10px\");\n          var el7 = dom.createTextNode(\"Genre\");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"row\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-md-12\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-0\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-0\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Action\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-1\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-1\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Adventure\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-2\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-2\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Cars\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-3\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-3\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Comedy\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-4\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-4\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Dementia\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-5\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-5\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Demons\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-6\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-6\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Drama\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-7\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-7\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Ecchi\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-8\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-8\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Fantasy\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-9\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-9\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Game\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-10\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-10\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Harem\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-11\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-11\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Hentai\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-12\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-12\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Historical\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-13\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-13\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Horror\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-14\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-14\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Josei\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-15\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-15\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Kids\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-16\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-16\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Magic\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-17\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-17\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Martial Arts\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-18\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-18\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Mecha\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-19\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-19\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Military\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-20\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-20\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Music\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-21\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-21\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Mystery\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-22\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-22\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Parody\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-23\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-23\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Police\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-24\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-24\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Psychological\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-25\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-25\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Romance\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-26\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-26\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Samurai\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-27\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-27\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                School\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-28\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-28\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Sci-Fi\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-29\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-29\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Seinen\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-30\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-30\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Shoujo\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-31\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-31\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Shoujo Ai\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-32\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-32\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Shounen\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-33\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-33\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Shounen Ai\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-34\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-34\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Slice of Life\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-35\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-35\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Space\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-36\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-36\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Sports\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-37\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-37\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Super Power\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-38\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-38\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Supernatural\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-39\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-39\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Thriller\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-40\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-40\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Vampire\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-41\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-41\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Yaoi\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"label\");\n          dom.setAttribute(el8,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el8,\"for\",\"checkboxes-42\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"input\");\n          dom.setAttribute(el9,\"type\",\"checkbox\");\n          dom.setAttribute(el9,\"name\",\"checkboxes\");\n          dom.setAttribute(el9,\"id\",\"checkboxes-42\");\n          dom.setAttribute(el9,\"value\",\"\");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                Yuri\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"input-group\");\n          dom.setAttribute(el6,\"style\",\"padding-top: 20px;padding-left: 15px;width:100%;\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"div\");\n          dom.setAttribute(el7,\"class\",\"col-sm-12\");\n          dom.setAttribute(el7,\"style\",\"border-top: 1px solid lightgray;padding-top: 20px;\");\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"div\");\n          dom.setAttribute(el8,\"class\",\"row\");\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"label\");\n          dom.setAttribute(el9,\"class\",\"col-xs-1 control-label\");\n          dom.setAttribute(el9,\"for\",\"Score\");\n          dom.setAttribute(el9,\"style\",\"padding: 0\");\n          var el10 = dom.createTextNode(\"Include\");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el7, el8);\n          var el8 = dom.createElement(\"div\");\n          dom.setAttribute(el8,\"class\",\"row\");\n          var el9 = dom.createTextNode(\"\\n\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"label\");\n          dom.setAttribute(el9,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el9,\"for\",\"checkboxes-42\");\n          var el10 = dom.createTextNode(\"\\n                                  \");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createComment(\"\");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createTextNode(\"\\n                                    Anime\\n                                \");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"label\");\n          dom.setAttribute(el9,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el9,\"for\",\"checkboxes-42\");\n          var el10 = dom.createTextNode(\"\\n                                  \");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createComment(\"\");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createTextNode(\"\\n                                    Manga\\n                                \");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"label\");\n          dom.setAttribute(el9,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el9,\"for\",\"checkboxes-42\");\n          var el10 = dom.createTextNode(\"\\n                                  \");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createComment(\"\");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createTextNode(\"\\n                                    Mangaka\\n                                \");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"label\");\n          dom.setAttribute(el9,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el9,\"for\",\"checkboxes-42\");\n          var el10 = dom.createTextNode(\"\\n                                  \");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createComment(\"\");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createTextNode(\"\\n                                    Character\\n                                \");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el8, el9);\n          var el9 = dom.createElement(\"label\");\n          dom.setAttribute(el9,\"class\",\"checkbox-inline no_indent\");\n          dom.setAttribute(el9,\"for\",\"checkboxes-42\");\n          var el10 = dom.createTextNode(\"\\n                                  \");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createComment(\"\");\n          dom.appendChild(el9, el10);\n          var el10 = dom.createTextNode(\"\\n                                    Podcast\\n                                \");\n          dom.appendChild(el9, el10);\n          dom.appendChild(el8, el9);\n          var el9 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          var el8 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0, 3, 1, 3, 3, 3, 1, 3]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n          var morph4 = dom.createMorphAt(dom.childAt(element0, [9]),1,1);\n          inline(env, morph0, context, \"input\", [], {\"type\": \"checkbox\", \"checked\": get(env, context, \"isAnimeType\")});\n          inline(env, morph1, context, \"input\", [], {\"type\": \"checkbox\", \"checked\": get(env, context, \"isMangaType\")});\n          inline(env, morph2, context, \"input\", [], {\"type\": \"checkbox\", \"checked\": get(env, context, \"isMangakaType\")});\n          inline(env, morph3, context, \"input\", [], {\"type\": \"checkbox\", \"checked\": get(env, context, \"isCharacterType\")});\n          inline(env, morph4, context, \"input\", [], {\"type\": \"checkbox\", \"checked\": get(env, context, \"isPodcastType\")});\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/partials/filter.js");

;eval("define(\"googlanime/templates/partials/home_search\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"container\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"container vertical-center\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"row \");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-xs-12 center-block container-brand\");\n          var el5 = dom.createTextNode(\"\\n                GooglAnime\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"style\",\"height: 30px;\");\n          dom.setAttribute(el4,\"class\",\"col-xs-12 center-block\");\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-xs-8 center-block\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"nav\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"ul\");\n          dom.setAttribute(el6,\"class\",\"search-type pagination custom\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"li\");\n          var el8 = dom.createElement(\"a\");\n          dom.setAttribute(el8,\"class\",\"default\");\n          dom.setAttribute(el8,\"href\",\"#\");\n          var el9 = dom.createTextNode(\"Anime\");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"li\");\n          var el8 = dom.createElement(\"a\");\n          dom.setAttribute(el8,\"href\",\"#\");\n          var el9 = dom.createTextNode(\"Manga\");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"li\");\n          var el8 = dom.createElement(\"a\");\n          dom.setAttribute(el8,\"href\",\"#\");\n          var el9 = dom.createTextNode(\"Mangaka\");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"li\");\n          var el8 = dom.createElement(\"a\");\n          dom.setAttribute(el8,\"href\",\"#\");\n          var el9 = dom.createTextNode(\"Character\");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"li\");\n          var el8 = dom.createElement(\"a\");\n          dom.setAttribute(el8,\"href\",\"#\");\n          var el9 = dom.createTextNode(\"Podcast\");\n          dom.appendChild(el8, el9);\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-xs-8 center-block\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"input-group\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"div\");\n          dom.setAttribute(el6,\"class\",\"container-4 input-group-btn right-addon\");\n          var el7 = dom.createTextNode(\"\\n                      \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createComment(\"\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"span\");\n          dom.setAttribute(el7,\"class\",\"icon\");\n          var el8 = dom.createElement(\"i\");\n          dom.setAttribute(el8,\"class\",\"fa fa-search\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 1, 7, 1, 1]),1,1);\n          inline(env, morph0, context, \"input\", [], {\"id\": \"search\", \"required\": \"true\", \"type\": \"text\", \"class\": \"form-control\", \"placeholder\": \"Search for...\", \"value\": get(env, context, \"searchValue\")});\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/partials/home_search.js");

;eval("define(\"googlanime/templates/partials/navbar_search\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"navbar subnav\");\n          dom.setAttribute(el1,\"role\",\"navigation\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"navbar-left\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"ul\");\n          dom.setAttribute(el3,\"class\",\"pager subnav-pager \");\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-xs-5\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"input-group\");\n          var el6 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createComment(\"\");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"span\");\n          dom.setAttribute(el6,\"class\",\"input-group-btn\");\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"button\");\n          dom.setAttribute(el7,\"class\",\"btn btn-default\");\n          var el8 = dom.createElement(\"span\");\n          dom.setAttribute(el8,\"class\",\"glyphicon glyphicon-search\");\n          dom.appendChild(el7, el8);\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"col-xs-1\");\n          dom.setAttribute(el4,\"style\",\"width: auto;\");\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"pull-right\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"button\");\n          dom.setAttribute(el6,\"class\",\"btn btn-default btn btn-filter\");\n          dom.setAttribute(el6,\"data-toggle\",\"collapse\");\n          dom.setAttribute(el6,\"data-target\",\"#collapseAdvancedFilter\");\n          dom.setAttribute(el6,\"aria-expanded\",\"false\");\n          dom.setAttribute(el6,\"aria-controls\",\"collapseAdvancedFilter\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"span\");\n          dom.setAttribute(el7,\"class\",\"glyphicon glyphicon-filter\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"pull-right\");\n          dom.setAttribute(el5,\"style\",\"margin-left:0px;\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"button\");\n          dom.setAttribute(el6,\"type\",\"button\");\n          dom.setAttribute(el6,\"class\",\"btn btn-default\");\n          dom.setAttribute(el6,\"aria-label\",\"Left Align\");\n          dom.setAttribute(el6,\"style\",\"\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"span\");\n          dom.setAttribute(el7,\"class\",\"glyphicon glyphicon-th\");\n          dom.setAttribute(el7,\"aria-hidden\",\"true\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"div\");\n          dom.setAttribute(el5,\"class\",\"pull-right\");\n          var el6 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"button\");\n          dom.setAttribute(el6,\"type\",\"button\");\n          dom.setAttribute(el6,\"class\",\"btn btn-default\");\n          dom.setAttribute(el6,\"aria-label\",\"Left Align\");\n          dom.setAttribute(el6,\"style\",\"\");\n          var el7 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createElement(\"span\");\n          dom.setAttribute(el7,\"class\",\"glyphicon glyphicon-th-list\");\n          dom.setAttribute(el7,\"aria-hidden\",\"true\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0, 1, 1]);\n          var element1 = dom.childAt(element0, [1, 1]);\n          var element2 = dom.childAt(element1, [3, 1]);\n          var element3 = dom.childAt(element0, [3]);\n          var element4 = dom.childAt(element3, [3, 1]);\n          var element5 = dom.childAt(element3, [5, 1]);\n          var morph0 = dom.createMorphAt(element1,1,1);\n          inline(env, morph0, context, \"input\", [], {\"key-up\": \"callBackend\", \"id\": \"search2\", \"required\": \"true\", \"type\": \"text\", \"class\": \"form-control\", \"placeholder\": \"Search for...\", \"value\": get(env, context, \"controller.query\")});\n          element(env, element2, context, \"action\", [\"callBackend\"], {});\n          element(env, element4, context, \"action\", [\"changeLayoutToThumbnail\"], {});\n          element(env, element5, context, \"action\", [\"changeLayoutToList\"], {});\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/partials/navbar_search.js");

;eval("define(\"googlanime/templates/search\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.HTMLBars.template((function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"alert alert-danger\");\n              dom.setAttribute(el1,\"role\",\"alert\");\n              var el2 = dom.createTextNode(\"\\n              \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"span\");\n              dom.setAttribute(el2,\"class\",\"glyphicon glyphicon-exclamation-sign\");\n              dom.setAttribute(el2,\"aria-hidden\",\"true\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n              \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"span\");\n              dom.setAttribute(el2,\"class\",\"sr-only\");\n              var el3 = dom.createTextNode(\"Error:\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n              \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createComment(\"\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n          \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),5,5);\n              content(env, morph0, context, \"controller.error\");\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child2 = (function() {\n          var child0 = (function() {\n            var child0 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"              \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"div\");\n                  dom.setAttribute(el1,\"class\",\"row\");\n                  dom.setAttribute(el1,\"style\",\"border-bottom: 1px solid #ddd;padding: 15px;\");\n                  var el2 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createElement(\"div\");\n                  dom.setAttribute(el2,\"class\",\"col-md-1 vertical-center-anime\");\n                  var el3 = dom.createTextNode(\"\\n                      \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createElement(\"img\");\n                  dom.setAttribute(el3,\"style\",\"max-width: 100%;\");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el2, el3);\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createElement(\"div\");\n                  dom.setAttribute(el2,\"class\",\"col-md-9\");\n                  dom.setAttribute(el2,\"style\",\"text-align: justify;margin: 0;padding: 0\");\n                  var el3 = dom.createTextNode(\"\\n                      \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createElement(\"h4\");\n                  dom.setAttribute(el3,\"class\",\"media-heading\");\n                  var el4 = dom.createComment(\"\");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"small\");\n                  var el5 = dom.createElement(\"i\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                      \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createElement(\"div\");\n                  dom.setAttribute(el3,\"class\",\"vertical-center-anime col-center-block\");\n                  var el4 = dom.createComment(\"\");\n                  dom.appendChild(el3, el4);\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el2, el3);\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createElement(\"div\");\n                  dom.setAttribute(el2,\"class\",\"col-md-1 vertical-center-anime centering\");\n                  var el3 = dom.createTextNode(\"\\n                    \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createComment(\"\");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el2, el3);\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createElement(\"div\");\n                  dom.setAttribute(el2,\"class\",\"col-md-1 vertical-center-anime centering\");\n                  var el3 = dom.createTextNode(\"\\n                    \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createComment(\"\");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                  \");\n                  dom.appendChild(el2, el3);\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n              \");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, content = hooks.content;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var element9 = dom.childAt(fragment, [1]);\n                  var element10 = dom.childAt(element9, [1, 1]);\n                  var element11 = dom.childAt(element9, [3]);\n                  var attrMorph0 = dom.createAttrMorph(element10, \'src\');\n                  var morph0 = dom.createMorphAt(dom.childAt(element11, [1]),0,0);\n                  var morph1 = dom.createMorphAt(dom.childAt(element11, [3]),0,0);\n                  var morph2 = dom.createMorphAt(dom.childAt(element9, [5]),1,1);\n                  var morph3 = dom.createMorphAt(dom.childAt(element9, [7]),1,1);\n                  attribute(env, attrMorph0, element10, \"src\", concat(env, [get(env, context, \"anime.posterImage\")]));\n                  content(env, morph0, context, \"anime.titles.romaji\");\n                  content(env, morph1, context, \"anime.synopsis\");\n                  content(env, morph2, context, \"anime.showType\");\n                  content(env, morph3, context, \"anime.episodeCount\");\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n                dom.insertBoundary(fragment, null);\n                dom.insertBoundary(fragment, 0);\n                block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"anime\"}, child0, null);\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            var child0 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                      \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createComment(\"\");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n                        \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"div\");\n                  dom.setAttribute(el1,\"class\",\"col-md-1\");\n                  dom.setAttribute(el1,\"style\",\"margin: 0;padding: 0\");\n                  var el2 = dom.createTextNode(\"\\n                            \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createElement(\"a\");\n                  dom.setAttribute(el2,\"href\",\"#\");\n                  dom.setAttribute(el2,\"class\",\"thumbnail\");\n                  dom.setAttribute(el2,\"style\",\"margin: 0;padding: 0;\");\n                  var el3 = dom.createTextNode(\"\\n                                \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createElement(\"img\");\n                  dom.setAttribute(el3,\"class\",\"serie-poster-image\");\n                  dom.setAttribute(el3,\"style\",\"background-size:cover;height: 200px;\");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                                \");\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createElement(\"div\");\n                  dom.setAttribute(el3,\"class\",\"serie-hidden\");\n                  dom.setAttribute(el3,\"style\",\"display: none\");\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-title-canonical\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-title-romaji\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-title-english\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-title-japanese\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-started-airing-date\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-finished-airing-date\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-youtube-video-id\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-age-rating\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-episode-count\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-episode-length\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createElement(\"div\");\n                  dom.setAttribute(el4,\"class\",\"serie-show-type\");\n                  var el5 = dom.createComment(\"\");\n                  dom.appendChild(el4, el5);\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                    \");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createComment(\"<div class=\\\"serie-genres\\\">{{anime.genres}}</div>\");\n                  dom.appendChild(el3, el4);\n                  var el4 = dom.createTextNode(\"\\n                                \");\n                  dom.appendChild(el3, el4);\n                  dom.appendChild(el2, el3);\n                  var el3 = dom.createTextNode(\"\\n                            \");\n                  dom.appendChild(el2, el3);\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\"\\n                        \");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, content = hooks.content, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, element = hooks.element;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var element0 = dom.childAt(fragment, [3, 1]);\n                  var element1 = dom.childAt(element0, [1]);\n                  var element2 = dom.childAt(element0, [3]);\n                  var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                  var attrMorph0 = dom.createAttrMorph(element1, \'src\');\n                  var morph1 = dom.createMorphAt(dom.childAt(element2, [1]),0,0);\n                  var morph2 = dom.createMorphAt(dom.childAt(element2, [3]),0,0);\n                  var morph3 = dom.createMorphAt(dom.childAt(element2, [5]),0,0);\n                  var morph4 = dom.createMorphAt(dom.childAt(element2, [7]),0,0);\n                  var morph5 = dom.createMorphAt(dom.childAt(element2, [9]),0,0);\n                  var morph6 = dom.createMorphAt(dom.childAt(element2, [11]),0,0);\n                  var morph7 = dom.createMorphAt(dom.childAt(element2, [13]),0,0);\n                  var morph8 = dom.createMorphAt(dom.childAt(element2, [15]),0,0);\n                  var morph9 = dom.createMorphAt(dom.childAt(element2, [17]),0,0);\n                  var morph10 = dom.createMorphAt(dom.childAt(element2, [19]),0,0);\n                  var morph11 = dom.createMorphAt(dom.childAt(element2, [21]),0,0);\n                  content(env, morph0, context, \"model.titles.canonical\");\n                  attribute(env, attrMorph0, element1, \"src\", concat(env, [get(env, context, \"anime.posterImage\")]));\n                  element(env, element1, context, \"action\", [\"updateSeriePanel\", get(env, context, \"anime\")], {\"on\": \"mouseEnter\"});\n                  content(env, morph1, context, \"anime.canonicalTitle\");\n                  content(env, morph2, context, \"anime.romajiTitle\");\n                  content(env, morph3, context, \"anime.englishTitle\");\n                  content(env, morph4, context, \"anime.japaneseTitle\");\n                  content(env, morph5, context, \"anime.startedAiringDate\");\n                  content(env, morph6, context, \"anime.finishedAiringDate\");\n                  content(env, morph7, context, \"anime.youtubeVideoId\");\n                  content(env, morph8, context, \"anime.ageRating\");\n                  content(env, morph9, context, \"anime.episodeCount\");\n                  content(env, morph10, context, \"anime.episodeLength\");\n                  content(env, morph11, context, \"anime.showType\");\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"            \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"div\");\n                dom.setAttribute(el1,\"class\",\"container-fluid\");\n                dom.setAttribute(el1,\"style\",\"margin-left: 20px; margin-right: 20px\");\n                var el2 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"div\");\n                dom.setAttribute(el2,\"class\",\"row\");\n                var el3 = dom.createTextNode(\"\\n                  \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                dom.setAttribute(el3,\"id\",\"series-panel\");\n                dom.setAttribute(el3,\"class\",\"col-md-2\");\n                dom.setAttribute(el3,\"style\",\"padding-right: 30px;\");\n                var el4 = dom.createTextNode(\"\\n                          \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createElement(\"div\");\n                dom.setAttribute(el4,\"class\",\"row\");\n                var el5 = dom.createTextNode(\"\\n                              \");\n                dom.appendChild(el4, el5);\n                var el5 = dom.createElement(\"img\");\n                dom.setAttribute(el5,\"id\",\"serie-poster\");\n                dom.setAttribute(el5,\"style\",\"background-size:cover;height: 100%;width: 100%;max-height: 400px;max-width: 100%\");\n                dom.appendChild(el4, el5);\n                var el5 = dom.createTextNode(\"\\n                          \");\n                dom.appendChild(el4, el5);\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n                          \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createElement(\"div\");\n                dom.setAttribute(el4,\"class\",\"row\");\n                var el5 = dom.createTextNode(\"\\n                              \");\n                dom.appendChild(el4, el5);\n                var el5 = dom.createElement(\"div\");\n                dom.setAttribute(el5,\"id\",\"serie-info\");\n                var el6 = dom.createTextNode(\"\\n                                  \");\n                dom.appendChild(el5, el6);\n                var el6 = dom.createElement(\"h4\");\n                dom.setAttribute(el6,\"style\",\"text-align: left;padding-bottom:5px;border-bottom: 1px solid black\");\n                var el7 = dom.createTextNode(\"\\n                                      Titles\\n                                  \");\n                dom.appendChild(el6, el7);\n                dom.appendChild(el5, el6);\n                var el6 = dom.createTextNode(\"\\n                                  \");\n                dom.appendChild(el5, el6);\n                var el6 = dom.createElement(\"div\");\n                dom.setAttribute(el6,\"id\",\"serie-titles\");\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-title-romaji-left\");\n                var el8 = dom.createTextNode(\"Romaji: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-title-japanese-left\");\n                var el8 = dom.createTextNode(\"Japanese: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                  \");\n                dom.appendChild(el6, el7);\n                dom.appendChild(el5, el6);\n                var el6 = dom.createTextNode(\"\\n                                  \");\n                dom.appendChild(el5, el6);\n                var el6 = dom.createElement(\"h4\");\n                dom.setAttribute(el6,\"id\",\"serie-information\");\n                dom.setAttribute(el6,\"style\",\"text-align: left;padding-bottom:5px;border-bottom: 1px solid black\");\n                var el7 = dom.createTextNode(\"\\n                                      Information\\n                                  \");\n                dom.appendChild(el6, el7);\n                dom.appendChild(el5, el6);\n                var el6 = dom.createTextNode(\"\\n                                  \");\n                dom.appendChild(el5, el6);\n                var el6 = dom.createElement(\"div\");\n                dom.setAttribute(el6,\"id\",\"serie-metadata\");\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-started-airing-date-left\");\n                var el8 = dom.createTextNode(\"Aired: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-finished-airing-date-left\");\n                var el8 = dom.createTextNode(\"To: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-youtube-video-id-left\");\n                var el8 = dom.createTextNode(\"Trailer: http://youtube.com/\");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-age-rating-left\");\n                var el8 = dom.createTextNode(\"Rating: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-episode-count-left\");\n                var el8 = dom.createTextNode(\"Episodes: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-episode-length-left\");\n                var el8 = dom.createTextNode(\"Duration: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                      \");\n                dom.appendChild(el6, el7);\n                var el7 = dom.createElement(\"div\");\n                dom.setAttribute(el7,\"id\",\"serie-show-type-left\");\n                var el8 = dom.createTextNode(\"Type: \");\n                dom.appendChild(el7, el8);\n                var el8 = dom.createComment(\"\");\n                dom.appendChild(el7, el8);\n                dom.appendChild(el6, el7);\n                var el7 = dom.createTextNode(\"\\n                                  \");\n                dom.appendChild(el6, el7);\n                dom.appendChild(el5, el6);\n                var el6 = dom.createTextNode(\"\\n                              \");\n                dom.appendChild(el5, el6);\n                dom.appendChild(el4, el5);\n                var el5 = dom.createTextNode(\"\\n                          \");\n                dom.appendChild(el4, el5);\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n                  \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n                  \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"div\");\n                dom.setAttribute(el3,\"class\",\"center-block\");\n                var el4 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createComment(\"\");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"                  \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n                  \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n              \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, content = hooks.content, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element3 = dom.childAt(fragment, [1, 1]);\n                var element4 = dom.childAt(element3, [1]);\n                var element5 = dom.childAt(element4, [1, 1]);\n                var element6 = dom.childAt(element4, [3, 1]);\n                var element7 = dom.childAt(element6, [3]);\n                var element8 = dom.childAt(element6, [7]);\n                var attrMorph0 = dom.createAttrMorph(element5, \'src\');\n                var morph0 = dom.createMorphAt(dom.childAt(element7, [1]),1,1);\n                var morph1 = dom.createMorphAt(dom.childAt(element7, [3]),1,1);\n                var morph2 = dom.createMorphAt(dom.childAt(element8, [1]),1,1);\n                var morph3 = dom.createMorphAt(dom.childAt(element8, [3]),1,1);\n                var morph4 = dom.createMorphAt(dom.childAt(element8, [5]),1,1);\n                var morph5 = dom.createMorphAt(dom.childAt(element8, [7]),1,1);\n                var morph6 = dom.createMorphAt(dom.childAt(element8, [9]),1,1);\n                var morph7 = dom.createMorphAt(dom.childAt(element8, [11]),1,1);\n                var morph8 = dom.createMorphAt(dom.childAt(element8, [13]),1,1);\n                var morph9 = dom.createMorphAt(dom.childAt(element3, [3]),1,1);\n                attribute(env, attrMorph0, element5, \"src\", concat(env, [get(env, context, \"animeSelected.posterImage\")]));\n                content(env, morph0, context, \"animeSelected.romajiTitle\");\n                content(env, morph1, context, \"animeSelected.japaneseTitle\");\n                content(env, morph2, context, \"animeSelected.startedAiringDate\");\n                content(env, morph3, context, \"animeSelected.finishedAiringDate\");\n                content(env, morph4, context, \"animeSelected.youtubeVideoId\");\n                content(env, morph5, context, \"animeSelected.ageRating\");\n                content(env, morph6, context, \"animeSelected.episodeCount\");\n                content(env, morph7, context, \"animeSelected.episodeLength\");\n                content(env, morph8, context, \"animeSelected.showType\");\n                block(env, morph9, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"anime\"}, child0, null);\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"layoutList\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n  \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n  \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"container-fluid container-search-result\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element12 = dom.childAt(fragment, [5]);\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n            var morph2 = dom.createMorphAt(element12,1,1);\n            var morph3 = dom.createMorphAt(element12,2,2);\n            inline(env, morph0, context, \"partial\", [\"partials/navbar_search\"], {});\n            inline(env, morph1, context, \"partial\", [\"partials/filter\"], {});\n            block(env, morph2, context, \"if\", [get(env, context, \"controller.error\")], {}, child0, null);\n            block(env, morph3, context, \"unless\", [get(env, context, \"model\")], {}, child1, child2);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"   \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"partials/home_search\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"script\");\n          dom.setAttribute(el1,\"type\",\"text/javascript\");\n          var el2 = dom.createTextNode(\"\\n\\n    //Default tab selector\\n    var type = \\\"Anime\\\";\\n\\n    $(\'#search\').keypress(function(e){\\n        if(e.which == 13){\\n            var url = \\\"search?query=\\\" + $(\'#search\').val() + \\\"&type=\\\" + type.toLowerCase();\\n            window.location.replace(url);\\n        }\\n    });\\n\\n    //prevent redirection\\n    $(\'ul.search-type li a\').on(\'click\', function(e) {\\n        e.preventDefault();\\n    });\\n\\n    $(document).ready(function()\\n    {\\n\\n        $(\\\".default\\\").css(\\\"border-top\\\", \\\"1px solid #3B6F96\\\");\\n        $(\\\".default\\\").css(\\\"box-shadow\\\", \\\"inset 0 1.5px #3B6F96\\\");\\n        $(\\\".default\\\").css(\\\"border-bottom\\\", \\\"none\\\");\\n\\n        $(\'ul.search-type li\').click(function(e)\\n        {\\n            var clickEl = $(\'ul.search-type li a\');\\n\\n            //deselect\\n            clickEl.each(function(){\\n                $(this).css(\\\"box-shadow\\\", \\\"none\\\");\\n                $(this).css(\\\"z-index\\\", \\\"none\\\");\\n                $(this).css(\\\"border\\\", \\\"1px solid #ddd\\\");\\n                $(this).css(\\\"border-bottom\\\", \\\"none\\\");\\n\\n            });\\n            //select\\n            $(this).find(\\\"a\\\").css(\\\"border-top\\\", \\\"1px solid #3B6F96\\\");\\n            $(this).find(\\\"a\\\").css(\\\"box-shadow\\\", \\\"inset 0 1.5px #3B6F96\\\");\\n            $(this).find(\\\"a\\\").css(\\\"border-bottom\\\", \\\"none\\\");\\n\\n            type = $(this).find(\\\"a\\\").text();\\n        });\\n    });\\n\\n    $(\'.subnav\').affix({\\n        offset: {\\n            top: $(\'#navtop\').height()\\n        }\\n    });\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          block(env, morph0, context, \"if\", [get(env, context, \"search\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }()));\n  });//# sourceURL=googlanime/templates/search.js");

;eval("define(\"googlanime/tests/adapters/anime.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/anime.js should pass jshint\', function() { \n      ok(false, \'adapters/anime.js should pass jshint.\\nadapters/anime.js: line 2, col 8, \\\'App\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=googlanime/tests/adapters/anime.jshint.js");

;eval("define(\"googlanime/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/app.jshint.js");

;eval("define(\"googlanime/tests/controllers/account.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/account.js should pass jshint\', function() { \n      ok(true, \'controllers/account.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/controllers/account.jshint.js");

;eval("define(\"googlanime/tests/controllers/account/signup.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/account\');\n    test(\'controllers/account/signup.js should pass jshint\', function() { \n      ok(true, \'controllers/account/signup.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/controllers/account/signup.jshint.js");

;eval("define(\"googlanime/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/controllers/application.jshint.js");

;eval("define(\"googlanime/tests/controllers/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/login.js should pass jshint\', function() { \n      ok(true, \'controllers/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/controllers/login.jshint.js");

;eval("define(\"googlanime/tests/controllers/search.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/search.js should pass jshint\', function() { \n      ok(true, \'controllers/search.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/controllers/search.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/helpers\');\n    test(\'googlanime/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/helpers/resolver.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/helpers\');\n    test(\'googlanime/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/helpers/start-app.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/helpers/validate-properties.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/helpers\');\n    test(\'googlanime/tests/helpers/validate-properties.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/helpers/validate-properties.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/helpers/validate-properties.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests\');\n    test(\'googlanime/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/test-helper.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/controllers/account/signup-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/controllers/account\');\n    test(\'googlanime/tests/unit/controllers/account/signup-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/controllers/account/signup-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/controllers/account/signup-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/controllers\');\n    test(\'googlanime/tests/unit/controllers/application-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/controllers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/controllers/application-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/controllers/login-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/controllers\');\n    test(\'googlanime/tests/unit/controllers/login-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/controllers/login-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/controllers/login-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/controllers/search-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/controllers\');\n    test(\'googlanime/tests/unit/controllers/search-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/controllers/search-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/controllers/search-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/helpers/query-param-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/helpers\');\n    test(\'googlanime/tests/unit/helpers/query-param-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/helpers/query-param-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/helpers/query-param-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/initializers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/initializers\');\n    test(\'googlanime/tests/unit/initializers/application-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/initializers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/initializers/application-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/models/search-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/models\');\n    test(\'googlanime/tests/unit/models/search-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/models/search-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/models/search-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/models\');\n    test(\'googlanime/tests/unit/models/user-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/models/user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/models/user-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/routes\');\n    test(\'googlanime/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/routes/application-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/routes/search-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/routes\');\n    test(\'googlanime/tests/unit/routes/search-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/routes/search-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/routes/search-test.jshint.js");

;eval("define(\"googlanime/tests/googlanime/tests/unit/serializers/animes-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - googlanime/tests/unit/serializers\');\n    test(\'googlanime/tests/unit/serializers/animes-test.js should pass jshint\', function() { \n      ok(true, \'googlanime/tests/unit/serializers/animes-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/googlanime/tests/unit/serializers/animes-test.jshint.js");

;eval("define(\"googlanime/tests/helpers/query-param.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/query-param.js should pass jshint\', function() { \n      ok(false, \'helpers/query-param.js should pass jshint.\\nhelpers/query-param.js: line 5, col 2, Unnecessary semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=googlanime/tests/helpers/query-param.jshint.js");

;eval("define(\"googlanime/tests/helpers/resolver\", \n  [\"ember/resolver\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=googlanime/tests/helpers/resolver.js");

;eval("define(\"googlanime/tests/helpers/start-app\", \n  [\"ember\",\"googlanime/app\",\"googlanime/router\",\"googlanime/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n\n\n    __exports__[\"default\"] = startApp;\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n    function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function () {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=googlanime/tests/helpers/start-app.js");

;eval("define(\"googlanime/tests/helpers/validate-properties\", \n  [\"ember\",\"ember-qunit\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    __exports__.testValidPropertyValues = testValidPropertyValues;\n    __exports__.testInvalidPropertyValues = testInvalidPropertyValues;\n    var Ember = __dependency1__[\"default\"];\n    var test = __dependency2__.test;\n\n    var run = Ember.run;\n\n    function validateValues(object, propertyName, values, isTestForValid) {\n      var promise = null;\n      var validatedValues = [];\n\n      values.forEach(function (value) {\n        function handleValidation(errors) {\n          var hasErrors = object.get(\'errors.\' + propertyName + \'.firstObject\');\n          if (hasErrors && !isTestForValid || !hasErrors && isTestForValid) {\n            validatedValues.push(value);\n          }\n        }\n\n        run(object, \'set\', propertyName, value);\n\n        var objectPromise = null;\n        run(function () {\n          objectPromise = object.validate().then(handleValidation, handleValidation);\n        });\n\n        // Since we are setting the values in a different run loop as we are validating them,\n        // we need to chain the promises so that they run sequentially. The wrong value will\n        // be validated if the promises execute concurrently\n        promise = promise ? promise.then(objectPromise) : objectPromise;\n      });\n\n      return promise.then(function () {\n        return validatedValues;\n      });\n    }\n\n    function testPropertyValues(propertyName, values, isTestForValid, context) {\n      var validOrInvalid = isTestForValid ? \'Valid\' : \'Invalid\';\n      var testName = validOrInvalid + \' \' + propertyName;\n\n      test(testName, function (assert) {\n        var object = this.subject();\n\n        if (context && typeof context === \'function\') {\n          context(object);\n        }\n\n        // Use QUnit.dump.parse so null and undefined can be printed as literal \'null\' and\n        // \'undefined\' strings in the assert message.\n        var valuesString = QUnit.dump.parse(values).replace(/\\n(\\s+)?/g, \'\').replace(/,/g, \', \');\n        var assertMessage = \'Expected \' + propertyName + \' to have \' + validOrInvalid.toLowerCase() + \' values: \' + valuesString;\n\n        return validateValues(object, propertyName, values, isTestForValid).then(function (validatedValues) {\n          assert.deepEqual(validatedValues, values, assertMessage);\n        });\n      });\n    }\n\n    function testValidPropertyValues(propertyName, values, context) {\n      testPropertyValues(propertyName, values, true, context);\n    }\n\n    function testInvalidPropertyValues(propertyName, values, context) {\n      testPropertyValues(propertyName, values, false, context);\n    }\n  });//# sourceURL=googlanime/tests/helpers/validate-properties.js");

;eval("define(\"googlanime/tests/initializers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/application.js should pass jshint\', function() { \n      ok(true, \'initializers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/initializers/application.jshint.js");

;eval("define(\"googlanime/tests/models/account.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/account.js should pass jshint\', function() { \n      ok(true, \'models/account.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/account.jshint.js");

;eval("define(\"googlanime/tests/models/account/signin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models/account\');\n    test(\'models/account/signin.js should pass jshint\', function() { \n      ok(true, \'models/account/signin.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/account/signin.jshint.js");

;eval("define(\"googlanime/tests/models/account/signup.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models/account\');\n    test(\'models/account/signup.js should pass jshint\', function() { \n      ok(true, \'models/account/signup.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/account/signup.jshint.js");

;eval("define(\"googlanime/tests/models/anime.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/anime.js should pass jshint\', function() { \n      ok(false, \'models/anime.js should pass jshint.\\nmodels/anime.js: line 2, col 8, \\\'App\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=googlanime/tests/models/anime.jshint.js");

;eval("define(\"googlanime/tests/models/genre.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/genre.js should pass jshint\', function() { \n      ok(true, \'models/genre.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/genre.jshint.js");

;eval("define(\"googlanime/tests/models/link.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/link.js should pass jshint\', function() { \n      ok(true, \'models/link.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/link.jshint.js");

;eval("define(\"googlanime/tests/models/manga.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/manga.js should pass jshint\', function() { \n      ok(true, \'models/manga.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/manga.jshint.js");

;eval("define(\"googlanime/tests/models/search.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/search.js should pass jshint\', function() { \n      ok(true, \'models/search.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/search.jshint.js");

;eval("define(\"googlanime/tests/models/title.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/title.js should pass jshint\', function() { \n      ok(true, \'models/title.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/title.jshint.js");

;eval("define(\"googlanime/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/user.js should pass jshint\', function() { \n      ok(true, \'models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/models/user.jshint.js");

;eval("define(\"googlanime/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/router.jshint.js");

;eval("define(\"googlanime/tests/routes/account.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/account.js should pass jshint\', function() { \n      ok(false, \'routes/account.js should pass jshint.\\nroutes/account.js: line 8, col 11, \\\'controller\\\' is defined but never used.\\nroutes/account.js: line 9, col 94, \\\'data\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=googlanime/tests/routes/account.jshint.js");

;eval("define(\"googlanime/tests/routes/account/signin.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/account\');\n    test(\'routes/account/signin.js should pass jshint\', function() { \n      ok(true, \'routes/account/signin.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/routes/account/signin.jshint.js");

;eval("define(\"googlanime/tests/routes/account/signup.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/account\');\n    test(\'routes/account/signup.js should pass jshint\', function() { \n      ok(true, \'routes/account/signup.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/routes/account/signup.jshint.js");

;eval("define(\"googlanime/tests/routes/animes.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/animes.js should pass jshint\', function() { \n      ok(true, \'routes/animes.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/routes/animes.jshint.js");

;eval("define(\"googlanime/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(false, \'routes/application.js should pass jshint.\\nroutes/application.js: line 17, col 13, \\\'authData\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=googlanime/tests/routes/application.jshint.js");

;eval("define(\"googlanime/tests/routes/search.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/search.js should pass jshint\', function() { \n      ok(false, \'routes/search.js should pass jshint.\\nroutes/search.js: line 68, col 16, \\\'animes\\\' is not defined.\\n\\n1 error\'); \n    });\n  });//# sourceURL=googlanime/tests/routes/search.jshint.js");

;eval("define(\"googlanime/tests/serializers/anime.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - serializers\');\n    test(\'serializers/anime.js should pass jshint\', function() { \n      ok(true, \'serializers/anime.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/serializers/anime.jshint.js");

;eval("define(\"googlanime/tests/serializers/animes.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - serializers\');\n    test(\'serializers/animes.js should pass jshint\', function() { \n      ok(true, \'serializers/animes.js should pass jshint.\'); \n    });\n  });//# sourceURL=googlanime/tests/serializers/animes.jshint.js");

;eval("define(\"googlanime/tests/test-helper\", \n  [\"googlanime/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\' });\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=googlanime/tests/test-helper.js");

;eval("define(\"googlanime/tests/torii-providers/google-token.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - torii-providers\');\n    test(\'torii-providers/google-token.js should pass jshint\', function() { \n      ok(false, \'torii-providers/google-token.js should pass jshint.\\ntorii-providers/google-token.js: line 47, col 16, \\\'$\\\' is not defined.\\ntorii-providers/google-token.js: line 31, col 11, \\\'client_id\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=googlanime/tests/torii-providers/google-token.jshint.js");

;eval("define(\"googlanime/tests/unit/controllers/account/signup-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:account/signup\', \'AccountSignupController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function () {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=googlanime/tests/unit/controllers/account/signup-test.js");

;eval("define(\"googlanime/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:application\', \'ApplicationController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function () {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=googlanime/tests/unit/controllers/application-test.js");

;eval("define(\"googlanime/tests/unit/controllers/login-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:login\', \'LoginController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function () {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=googlanime/tests/unit/controllers/login-test.js");

;eval("define(\"googlanime/tests/unit/controllers/search-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:search\', \'SearchController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function () {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=googlanime/tests/unit/controllers/search-test.js");

;eval("define(\"googlanime/tests/unit/helpers/query-param-test\", \n  [\"googlanime/helpers/query-param\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var queryParam = __dependency1__.queryParam;\n\n    module(\'QueryParamHelper\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function () {\n      var result = queryParam(42);\n      ok(result);\n    });\n  });//# sourceURL=googlanime/tests/unit/helpers/query-param-test.js");

;eval("define(\"googlanime/tests/unit/initializers/application-test\", \n  [\"ember\",\"googlanime/initializers/application\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var initialize = __dependency2__.initialize;\n\n    var container, application;\n\n    module(\'ApplicationInitializer\', {\n      setup: function setup() {\n        Ember.run(function () {\n          container = new Ember.Container();\n          application = Ember.Application.create();\n          application.deferReadiness();\n        });\n      }\n    });\n\n    // Replace this with your real tests.\n    test(\'it works\', function () {\n      initialize(container, application);\n\n      // you would normally confirm the results of the initializer here\n      ok(true);\n    });\n  });//# sourceURL=googlanime/tests/unit/initializers/application-test.js");

;eval("define(\"googlanime/tests/unit/models/search-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'search\', \'Search\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function () {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=googlanime/tests/unit/models/search-test.js");

;eval("define(\"googlanime/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'user\', \'User\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function () {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=googlanime/tests/unit/models/user-test.js");

;eval("define(\"googlanime/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function () {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=googlanime/tests/unit/routes/application-test.js");

;eval("define(\"googlanime/tests/unit/routes/search-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:search\', \'SearchRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function () {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=googlanime/tests/unit/routes/search-test.js");

;eval("define(\"googlanime/tests/unit/serializers/animes-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'serializer:animes\', \'AnimesSerializer\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function () {\n      var serializer = this.subject();\n      ok(serializer);\n    });\n  });//# sourceURL=googlanime/tests/unit/serializers/animes-test.js");

;eval("define(\"googlanime/torii-providers/google-token\", \n  [\"torii/configuration\",\"torii/providers/oauth2-bearer\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var configurable = __dependency1__.configurable;\n    var Oauth2Bearer = __dependency2__[\"default\"];\n\n    var GoogleToken = Oauth2Bearer.extend({\n      name: \'google-token\',\n      baseUrl: \'https://accounts.google.com/o/oauth2/auth\',\n\n      // additional params that this provider requires\n      requiredUrlParams: [\'state\'],\n      optionalUrlParams: [\'scope\', \'request_visible_actions\', \'access_type\'],\n\n      requestVisibleActions: configurable(\'requestVisibleActions\', \'\'),\n\n      accessType: configurable(\'accessType\', \'\'),\n\n      responseParams: [\'token\'],\n\n      scope: configurable(\'scope\', \'email\'),\n\n      state: configurable(\'state\', \'STATE\'),\n\n      redirectUri: configurable(\'redirectUri\', \'http://localhost:8000/oauth2callback\'),\n\n      open: function open() {\n        var name = this.get(\'name\'),\n            url = this.buildUrl(),\n            redirectUri = this.get(\'redirectUri\'),\n            responseParams = this.get(\'responseParams\');\n\n        var client_id = this.get(\'client_id\');\n\n        return this.get(\'popup\').open(url, responseParams).then(function (authData) {\n          var missingResponseParams = [];\n\n          responseParams.forEach(function (param) {\n            if (authData[param] === undefined) {\n              missingResponseParams.push(param);\n            }\n          });\n\n          if (missingResponseParams.length) {\n            throw \"The response from the provider is missing \" + \"these required response params: \" + responseParams.join(\', \');\n          }\n\n          return $.get(\"https://www.googleapis.com/plus/v1/people/me\", { access_token: authData.token }).then(function (user) {\n            return {\n              userName: user.displayName,\n              userEmail: user.emails[0].value,\n              provider: name,\n              redirectUri: redirectUri\n            };\n          });\n        });\n      }\n    });\n\n    __exports__[\"default\"] = GoogleToken;\n  });//# sourceURL=googlanime/torii-providers/google-token.js");
